// Code generated by protoc-gen-go. DO NOT EDIT.
// source: result_code.proto

package adam

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResultCode int32

const (
	ResultCode_SUCCESS              ResultCode = 0
	ResultCode_AUTHENCATION_INVALID ResultCode = 100
	ResultCode_OPERATOR_NOT_EXIST   ResultCode = 101
	ResultCode_TARGET_NOT_EXIST     ResultCode = 102
	ResultCode_NO_AUTH              ResultCode = 103
	ResultCode_WAITING_FOR_REVIEW   ResultCode = 104
	ResultCode_WAITING_FOR_AGREE    ResultCode = 105
	ResultCode_PLAYER_EXIST         ResultCode = 1001
	ResultCode_IN_ORGANIZATION      ResultCode = 1002
	ResultCode_FAILD                ResultCode = 1003
	ResultCode_ALREADY_EXIST        ResultCode = 1004
	ResultCode_TARGET_NOT_IN        ResultCode = 1005
	ResultCode_ITEM_NOT_EXIST       ResultCode = 1006
	ResultCode_PLAYER_NOT_EXIST     ResultCode = 1007
	ResultCode_ITEM_OVER_MAX        ResultCode = 1008
	ResultCode_YOUR_HARE_HE         ResultCode = 1009
	ResultCode_HE_HARE_YOU          ResultCode = 1010
	ResultCode_NAME_CONFLICT        ResultCode = 2001
	ResultCode_ALREADY_IN_ORG       ResultCode = 2002
	ResultCode_ORG_NOT_EXIST        ResultCode = 2003
	ResultCode_CARD_NOT_IN_ORG      ResultCode = 2004
	ResultCode_CARD_IN_ORG          ResultCode = 2005
	ResultCode_ALREADY_JOIN_ORG     ResultCode = 2006
	ResultCode_APPLY_EXISTS         ResultCode = 2007
	ResultCode_NO_APPLY_REQUIRE     ResultCode = 2008
	ResultCode_NOT_ENOUGH_EXP       ResultCode = 2009
	ResultCode_ALREADY_OPEN         ResultCode = 2010
	ResultCode_HAD_MEMBER           ResultCode = 2011
	ResultCode_TEAM_OVER_MAX        ResultCode = 2012
	ResultCode_INVITE_NOT_EXIST     ResultCode = 2013
	ResultCode_CARD_NOT_IN_OEG      ResultCode = 2014
)

var ResultCode_name = map[int32]string{
	0:    "SUCCESS",
	100:  "AUTHENCATION_INVALID",
	101:  "OPERATOR_NOT_EXIST",
	102:  "TARGET_NOT_EXIST",
	103:  "NO_AUTH",
	104:  "WAITING_FOR_REVIEW",
	105:  "WAITING_FOR_AGREE",
	1001: "PLAYER_EXIST",
	1002: "IN_ORGANIZATION",
	1003: "FAILD",
	1004: "ALREADY_EXIST",
	1005: "TARGET_NOT_IN",
	1006: "ITEM_NOT_EXIST",
	1007: "PLAYER_NOT_EXIST",
	1008: "ITEM_OVER_MAX",
	1009: "YOUR_HARE_HE",
	1010: "HE_HARE_YOU",
	2001: "NAME_CONFLICT",
	2002: "ALREADY_IN_ORG",
	2003: "ORG_NOT_EXIST",
	2004: "CARD_NOT_IN_ORG",
	2005: "CARD_IN_ORG",
	2006: "ALREADY_JOIN_ORG",
	2007: "APPLY_EXISTS",
	2008: "NO_APPLY_REQUIRE",
	2009: "NOT_ENOUGH_EXP",
	2010: "ALREADY_OPEN",
	2011: "HAD_MEMBER",
	2012: "TEAM_OVER_MAX",
	2013: "INVITE_NOT_EXIST",
	2014: "CARD_NOT_IN_OEG",
}

var ResultCode_value = map[string]int32{
	"SUCCESS":              0,
	"AUTHENCATION_INVALID": 100,
	"OPERATOR_NOT_EXIST":   101,
	"TARGET_NOT_EXIST":     102,
	"NO_AUTH":              103,
	"WAITING_FOR_REVIEW":   104,
	"WAITING_FOR_AGREE":    105,
	"PLAYER_EXIST":         1001,
	"IN_ORGANIZATION":      1002,
	"FAILD":                1003,
	"ALREADY_EXIST":        1004,
	"TARGET_NOT_IN":        1005,
	"ITEM_NOT_EXIST":       1006,
	"PLAYER_NOT_EXIST":     1007,
	"ITEM_OVER_MAX":        1008,
	"YOUR_HARE_HE":         1009,
	"HE_HARE_YOU":          1010,
	"NAME_CONFLICT":        2001,
	"ALREADY_IN_ORG":       2002,
	"ORG_NOT_EXIST":        2003,
	"CARD_NOT_IN_ORG":      2004,
	"CARD_IN_ORG":          2005,
	"ALREADY_JOIN_ORG":     2006,
	"APPLY_EXISTS":         2007,
	"NO_APPLY_REQUIRE":     2008,
	"NOT_ENOUGH_EXP":       2009,
	"ALREADY_OPEN":         2010,
	"HAD_MEMBER":           2011,
	"TEAM_OVER_MAX":        2012,
	"INVITE_NOT_EXIST":     2013,
	"CARD_NOT_IN_OEG":      2014,
}

func (x ResultCode) String() string {
	return proto.EnumName(ResultCode_name, int32(x))
}

func (ResultCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8b3639c0d0cf5cd6, []int{0}
}

func init() {
	proto.RegisterEnum("adam.ResultCode", ResultCode_name, ResultCode_value)
}

func init() { proto.RegisterFile("result_code.proto", fileDescriptor_8b3639c0d0cf5cd6) }

var fileDescriptor_8b3639c0d0cf5cd6 = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xc9, 0x8e, 0xd3, 0x40,
	0x10, 0x86, 0x39, 0x0c, 0x58, 0xaa, 0x01, 0xba, 0xd2, 0x64, 0x10, 0xcf, 0xc0, 0x81, 0x0b, 0x4f,
	0x50, 0xd8, 0x15, 0xbb, 0x91, 0xdd, 0x6d, 0xca, 0xed, 0x4c, 0xc2, 0xa5, 0x35, 0x90, 0xb0, 0x48,
	0xa0, 0xa0, 0x61, 0x78, 0x50, 0xf6, 0x9d, 0x3b, 0xfb, 0xf2, 0x02, 0xa0, 0xee, 0x78, 0x84, 0xa5,
	0xb9, 0xfe, 0xae, 0xff, 0xff, 0xbf, 0x2a, 0x37, 0x4c, 0x0e, 0xd7, 0x8f, 0x9f, 0x3c, 0x38, 0x0a,
	0xb7, 0x37, 0xab, 0xf5, 0x95, 0x47, 0x87, 0x9b, 0xa3, 0x8d, 0xde, 0x39, 0x58, 0x1d, 0x3c, 0xbc,
	0xfc, 0x77, 0x07, 0x40, 0xd2, 0xb7, 0x7c, 0xb3, 0x5a, 0xeb, 0x5d, 0xc8, 0xba, 0x3e, 0xcf, 0xb9,
	0xeb, 0xf0, 0x94, 0xbe, 0x04, 0x53, 0xea, 0x7d, 0xc5, 0x36, 0x27, 0x6f, 0x9c, 0x0d, 0xc6, 0xce,
	0xa9, 0x36, 0x05, 0xae, 0xf4, 0x45, 0xd0, 0xae, 0x65, 0x21, 0xef, 0x24, 0x58, 0xe7, 0x03, 0x2f,
	0x4c, 0xe7, 0x71, 0xad, 0xa7, 0x80, 0x9e, 0xa4, 0x64, 0x3f, 0x52, 0xef, 0xc4, 0x50, 0xeb, 0x42,
	0x8c, 0xc2, 0xbb, 0xd1, 0xba, 0x4f, 0xc6, 0x1b, 0x5b, 0x86, 0x99, 0x93, 0x20, 0x3c, 0x37, 0xbc,
	0x8f, 0xf7, 0xf4, 0x1e, 0x4c, 0xc6, 0x3a, 0x95, 0xc2, 0x8c, 0xf7, 0xf5, 0x04, 0xce, 0xb6, 0x35,
	0x2d, 0x59, 0x86, 0xb4, 0xcf, 0x99, 0x9e, 0x82, 0x32, 0x36, 0x38, 0x29, 0xc9, 0x9a, 0x9b, 0x89,
	0x0c, 0xbf, 0x64, 0x1a, 0xe0, 0xf4, 0x8c, 0x4c, 0x5d, 0xe0, 0xd7, 0x4c, 0x6b, 0x38, 0x47, 0xb5,
	0x30, 0x15, 0xcb, 0xc1, 0xf5, 0x2d, 0x69, 0x23, 0x34, 0x63, 0xf1, 0x7b, 0xa6, 0x2f, 0xc0, 0x79,
	0xe3, 0xb9, 0x19, 0xc1, 0xfe, 0xc8, 0xf4, 0x1e, 0xe0, 0xd0, 0xf8, 0x5f, 0xfe, 0x99, 0xfc, 0x69,
	0xd6, 0xcd, 0x59, 0x42, 0x43, 0x0b, 0xfc, 0x95, 0x45, 0xb8, 0xa5, 0xeb, 0x25, 0x54, 0x24, 0x1c,
	0x2a, 0xc6, 0xdf, 0x99, 0x46, 0xd8, 0xad, 0x78, 0x2b, 0x2c, 0x5d, 0x8f, 0x7f, 0x92, 0xd1, 0x52,
	0xc3, 0x21, 0x77, 0x76, 0x56, 0x9b, 0xdc, 0xe3, 0x53, 0x15, 0x8b, 0x8f, 0x01, 0xb7, 0xab, 0xe0,
	0x33, 0x15, 0x07, 0x9d, 0x94, 0xa3, 0xd6, 0xe7, 0x2a, 0xee, 0x9a, 0x93, 0x14, 0x03, 0x73, 0x9a,
	0x7c, 0xa1, 0x62, 0x49, 0x52, 0x07, 0xe5, 0xa5, 0x8a, 0xd0, 0xc7, 0x81, 0xd7, 0xdd, 0x20, 0xbf,
	0x52, 0x11, 0x90, 0xda, 0xb6, 0x1e, 0xce, 0xd0, 0xe1, 0xeb, 0x34, 0x19, 0x7f, 0x46, 0x52, 0x85,
	0x6f, 0xf4, 0x46, 0x18, 0xdf, 0x24, 0xa2, 0x54, 0x6c, 0x5d, 0x5f, 0x56, 0x81, 0x17, 0x2d, 0xbe,
	0xdd, 0xda, 0x87, 0x54, 0xd7, 0xb2, 0xc5, 0x77, 0x4a, 0x2b, 0x80, 0x8a, 0x8a, 0xd0, 0x70, 0x73,
	0x8d, 0x05, 0xdf, 0x27, 0x6a, 0xcf, 0x34, 0xba, 0xcb, 0x87, 0xd4, 0x61, 0xec, 0xdc, 0x78, 0x1e,
	0x2d, 0xf3, 0xf1, 0xe4, 0x32, 0x5c, 0xe2, 0x27, 0x75, 0xeb, 0x4c, 0x7a, 0x8e, 0x57, 0xff, 0x05,
	0x00, 0x00, 0xff, 0xff, 0x38, 0xe4, 0xf7, 0xe3, 0xa3, 0x02, 0x00, 0x00,
}
